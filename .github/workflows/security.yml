name: Security Scanning

on:
  push:
    branches: [main, develop]
  pull_request:
    branches: [main]
  schedule:
    # Run weekly security scans
    - cron: "0 2 * * 0"

jobs:
  dependency-check:
    name: Dependency Vulnerability Scan
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.11"

      - name: Install dependencies
        run: |
          pip install --upgrade pip
          pip install safety bandit semgrep

      - name: Run Safety check
        run: |
          echo "🔍 Checking for known security vulnerabilities in dependencies..."
          safety check --json --output safety-report.json || true

          if [ -f safety-report.json ] && [ -s safety-report.json ]; then
            echo "⚠️ Security vulnerabilities found in dependencies!"
            safety check
          else
            echo "✅ No known vulnerabilities found in dependencies"
          fi

      - name: Upload Safety report
        uses: actions/upload-artifact@v3
        if: always()
        with:
          name: safety-report
          path: safety-report.json

  code-security-scan:
    name: Static Code Security Analysis
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.11"

      - name: Install Bandit
        run: pip install bandit[toml]

      - name: Run Bandit security scan
        run: |
          echo "🔍 Running static security analysis with Bandit..."
          bandit -r app/ -f json -o bandit-report.json || true

          # Show summary
          bandit -r app/ -ll || true

      - name: Upload Bandit report
        uses: actions/upload-artifact@v3
        if: always()
        with:
          name: bandit-report
          path: bandit-report.json

  semgrep-scan:
    name: Semgrep SAST Scan
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Run Semgrep
        uses: returntocorp/semgrep-action@v1
        with:
          config: >-
            p/security-audit
            p/secrets
            p/python

      - name: Upload SARIF file
        uses: github/codeql-action/upload-sarif@v2
        with:
          sarif_file: semgrep.sarif
        if: always()

  secret-scan:
    name: Secret Detection
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Run TruffleHog OSS
        uses: trufflesecurity/trufflehog@main
        with:
          path: ./
          base: main
          head: HEAD
          extra_args: --debug --only-verified

  docker-security-scan:
    name: Docker Image Security Scan
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Build Docker image
        run: |
          docker build -t insurge-ai-backend:security-scan .

      - name: Run Trivy vulnerability scanner
        uses: aquasecurity/trivy-action@master
        with:
          image-ref: "insurge-ai-backend:security-scan"
          format: "sarif"
          output: "trivy-results.sarif"

      - name: Upload Trivy scan results
        uses: github/codeql-action/upload-sarif@v2
        with:
          sarif_file: "trivy-results.sarif"

  infrastructure-scan:
    name: Infrastructure Security Scan
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Run Checkov
        uses: bridgecrewio/checkov-action@master
        with:
          directory: .
          framework: dockerfile,docker_compose
          output_format: sarif
          output_file_path: checkov-results.sarif

      - name: Upload Checkov results
        uses: github/codeql-action/upload-sarif@v2
        with:
          sarif_file: checkov-results.sarif
        if: always()

  security-summary:
    name: Security Scan Summary
    runs-on: ubuntu-latest
    needs:
      [
        dependency-check,
        code-security-scan,
        semgrep-scan,
        secret-scan,
        docker-security-scan,
        infrastructure-scan,
      ]
    if: always()

    steps:
      - name: Download all artifacts
        uses: actions/download-artifact@v3

      - name: Generate Security Report
        run: |
          echo "# 🛡️ Security Scan Summary" > security-summary.md
          echo "" >> security-summary.md
          echo "## Scan Results" >> security-summary.md
          echo "" >> security-summary.md

          # Check job statuses
          dependency_status="${{ needs.dependency-check.result }}"
          code_status="${{ needs.code-security-scan.result }}"
          semgrep_status="${{ needs.semgrep-scan.result }}"
          secret_status="${{ needs.secret-scan.result }}"
          docker_status="${{ needs.docker-security-scan.result }}"
          infra_status="${{ needs.infrastructure-scan.result }}"

          echo "- **Dependency Check**: $dependency_status" >> security-summary.md
          echo "- **Code Security Scan**: $code_status" >> security-summary.md
          echo "- **Semgrep SAST**: $semgrep_status" >> security-summary.md
          echo "- **Secret Detection**: $secret_status" >> security-summary.md
          echo "- **Docker Security**: $docker_status" >> security-summary.md
          echo "- **Infrastructure Scan**: $infra_status" >> security-summary.md
          echo "" >> security-summary.md

          # Overall status
          if [[ "$dependency_status" == "success" && "$code_status" == "success" && 
                "$semgrep_status" == "success" && "$secret_status" == "success" && 
                "$docker_status" == "success" && "$infra_status" == "success" ]]; then
            echo "## ✅ Overall Status: PASSED" >> security-summary.md
            echo "All security scans completed successfully with no critical issues found." >> security-summary.md
          else
            echo "## ⚠️ Overall Status: ATTENTION REQUIRED" >> security-summary.md
            echo "One or more security scans require attention. Please review the detailed reports." >> security-summary.md
          fi

          echo "" >> security-summary.md
          echo "Generated on: $(date -u)" >> security-summary.md

          cat security-summary.md

      - name: Upload Security Summary
        uses: actions/upload-artifact@v3
        with:
          name: security-summary
          path: security-summary.md
